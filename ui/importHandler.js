// üìÖ renderer/importHandler.js

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–º–ø–æ—Ä—Ç–∞ Excel
async function importExcelToDatabase(excelPath) {
    const result = await window.electronAPI.importExcel(excelPath);
    console.log("–ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω:", result);
    return result;
}

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ë–î –∏ —Ç–∞–±–ª–∏—Ü –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
async function createEmptyDatabase() {
    const dbPath = await window.electronAPI.getDbPath();
    const result = await window.electronAPI.createEmptyDatabase(dbPath);
    console.log(result);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
window.onload = async () => {
    const importBtn = document.getElementById('importBtn');

    try {
        console.log('–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –ë–î...');
        const DB_PATH = await window.electronAPI.getDbPath();
        console.log('–ü—É—Ç—å –∫ –ë–î:', DB_PATH);

        console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ë–î...');
        const isEmpty = await window.electronAPI.isDbEmpty();
        console.log('–ë–î –ø—É—Å—Ç–∞:', isEmpty);

        // –í—Å–µ–≥–¥–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏
        importBtn.style.display = 'inline-block';

        importBtn.addEventListener('click', async () => {
            try {
                const result = await window.electronAPI.selectExcelFile();

                if (!result.canceled && result.filePaths.length > 0) {
                    const filePath = result.filePaths[0];

                    console.log('–ó–∞–∫—Ä—ã–≤–∞–µ–º –ë–î –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º...');
                    await window.electronAPI.closeDb();


                    console.log('–£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ë–î...');
                    await window.electronAPI.deleteDb();

                    console.log('–°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ë–î...');
                    await createEmptyDatabase();

                    console.log('–ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç —Ñ–∞–π–ª–∞:', filePath);
                    await importExcelToDatabase(filePath);

                    alert('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!');
                    importBtn.style.display = 'none';
                    location.reload();
                }
            } catch (err) {
                console.error('–û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –∏–º–ø–æ—Ä—Ç–∞:', err);
                alert(`‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: ${err.message}`);
            }
        });

    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', err);
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
    }
};